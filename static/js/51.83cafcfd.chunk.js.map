{"version":3,"file":"static/js/51.83cafcfd.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/Contacts/Contacts.styled.jsx","Hooks/useInput.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-wrap: wrap;\n\n  span {\n    color: red;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: space-around;\n  width: 150px;\n  font-size: 20px;\n`;\n","import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Label, Button } from './ContactForm.styled';\nimport styled from '@emotion/styled';\nimport * as yup from 'yup';\nimport 'yup-phone';\nimport PropTypes from 'prop-types';\nimport { useAddContactMutation } from 'redux/contactsApi';\nimport { toast } from 'react-toastify';\nimport { Oval } from 'react-loader-spinner';\n\nconst Input = styled(Field)`\n  max-width: 100%;\n  margin-left: auto;\n  font-size: 20px;\n`;\n\nconst ConttForm = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  max-width: 350px;\n  gap: 10px;\n  font-size: 20px;\n`;\n\nconst initialValues = { name: '', number: '' };\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst phoneRegExp =\n  /^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nlet SignupSchema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .matches(\n      nameRegExp,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    )\n    .required(),\n  number: yup\n    .string()\n    .matches(\n      phoneRegExp,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n    )\n    .required(),\n});\n\nconst ContactForm = ({ contacts }) => {\n  const [addContact, { isLoading }] = useAddContactMutation();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    if (checkContactName(values.name)) {\n      toast.error('This contact is already exist', {\n        position: 'top-center',\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n        theme: 'colored',\n      });\n      return;\n    }\n    await addContact(values).unwrap();\n    toast.success('Contact is added to your phonebook', {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n    resetForm();\n  };\n\n  const checkContactName = name => {\n    return contacts.find(contact => contact.name === name);\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={SignupSchema}\n    >\n      <ConttForm autoComplete=\"off\">\n        <Label>\n          Name\n          <Input type=\"text\" name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </Label>\n\n        <Label>\n          Number\n          <Input type=\"tel\" name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </Label>\n\n        <Button type=\"submit\" disabled={isLoading}>\n          {isLoading && (\n            <Oval\n              height={15}\n              width={15}\n              color=\"rgb(25, 0, 185)\"\n              wrapperStyle={{}}\n              wrapperClass=\"\"\n              visible={true}\n              ariaLabel=\"oval-loading\"\n              secondaryColor=\"#4fa94d\"\n              strokeWidth={2}\n              strokeWidthSecondary={2}\n            />\n          )}\n          Add contact\n        </Button>\n      </ConttForm>\n    </Formik>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import styled from '@emotion/styled';\n\nexport const ContItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-end;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  margin-left: auto;\n  justify-content: space-around;\n  width: 100px;\n  font-size: 20px;\n`;\n\nexport const Name = styled.span`\n  color: #37474f;\n  font-weight: 500;\n`;\n\nexport const Phone = styled`\n`;\n","import { Button, Name } from './ContactItem.styled';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contactsApi';\nimport { Oval } from 'react-loader-spinner';\nimport ListItem from '@mui/material/ListItem';\nimport styled from '@emotion/styled';\nimport Avatar from '@mui/material/Avatar';\nimport { toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\n\nconst ContItem = styled(ListItem)`\n  gap: 10px;\n  font-size: 25px;\n`;\n\nfunction stringToColor(string) {\n  let hash = 0;\n  let i;\n  for (i = 0; i < string.length; i += 1) {\n    hash = string.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  let color = '#';\n\n  for (i = 0; i < 3; i += 1) {\n    const value = (hash >> (i * 8)) & 0xff;\n    color += `00${value.toString(16)}`.slice(-2);\n  }\n  return color;\n}\n\nfunction stringAvatar(name) {\n  if (name.split(' ').length > 1)\n    return {\n      sx: {\n        bgcolor: stringToColor(name),\n      },\n      children: `${name.split(' ')[0][0]}${name.split(' ')[1][0]}`,\n    };\n  return {\n    sx: {\n      bgcolor: stringToColor(name),\n    },\n    children: `${name.split(' ')[0][0]}`,\n  };\n}\n\nconst ContactItem = ({ name, number, id }) => {\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading }] = useDeleteContactMutation();\n\n  const handleButtonClick = async id => {\n    await deleteContact(id).unwrap();\n    toast.info('Contact deleted', {\n      position: 'top-center',\n      autoClose: 3000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n      progress: undefined,\n      theme: 'colored',\n    });\n  };\n\n  return (\n    <ContItem disablePadding>\n      <Avatar {...stringAvatar(name)} />\n      <Name>{name}:</Name>\n      <span>{number}</span>\n\n      <Button\n        type=\"button\"\n        onClick={() => {\n          navigate(`/goit-react-hw-08-phonebook/contacts/edit/${id}`);\n        }}\n        disabled={isLoading}\n      >\n        {isLoading && (\n          <Oval\n            height={15}\n            width={15}\n            color=\"rgb(25, 0, 185)\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel=\"oval-loading\"\n            secondaryColor=\"#4fa94d\"\n            strokeWidth={2}\n            strokeWidthSecondary={2}\n          />\n        )}\n        Edit\n      </Button>\n\n      <Button\n        type=\"button\"\n        onClick={() => handleButtonClick(id)}\n        disabled={isLoading}\n      >\n        {isLoading && (\n          <Oval\n            height={15}\n            width={15}\n            color=\"rgb(25, 0, 185)\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel=\"oval-loading\"\n            secondaryColor=\"#4fa94d\"\n            strokeWidth={2}\n            strokeWidthSecondary={2}\n          />\n        )}\n        Delete\n      </Button>\n    </ContItem>\n  );\n};\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n};\n\nexport default ContactItem;\n","import ContactItem from 'components/ContactItem';\n// import { ContList } from './ContactList.styled';\nimport PropTypes from 'prop-types';\nimport styled from '@emotion/styled';\n\nimport List from '@mui/material/List';\n\nconst ConttList = styled(List)`\n  gap: 10px;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst ContactList = ({ contacts }) => {\n  return (\n    <ConttList>\n      {contacts.map(({ id, name, number }) => {\n        return <ContactItem key={id} id={id} name={name} number={number} />;\n      })}\n    </ConttList>\n  );\n};\n\nContactList.propTypes = {\n  visibleContats: PropTypes.array,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const FilterLabel = styled.label`\n  font-size: 25px;\n`;\n\nexport const FilterInput = styled.input`\n  margin-left: 10px;\n  width: 275px;\n  height: 30px;\n  font-size: 20px;\n`;\n","import { FilterLabel, FilterInput } from './Filter.styled';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onInputChange }) => {\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        onChange={onInputChange}\n        value={value}\n      />\n    </FilterLabel>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onInputChange: PropTypes.func,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const ContactsTitle = styled.h2`\n  font-size: 30px;\n`;\n\nexport const Container = styled.div`\n  padding: 20px;\n  max-width: 600px;\n`;\n","import { filterChange } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\n\nconst useInput = () => {\n  const dispatch = useDispatch();\n\n  const onInputChange = e => {\n    dispatch(filterChange(e.target.value));\n  };\n\n  return { onInputChange };\n};\n\nexport default useInput;\n","import ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { ContactsTitle, Container } from './Contacts.styled';\nimport { ThreeDots } from 'react-loader-spinner';\nimport useInput from 'Hooks/useInput';\nimport { Outlet } from 'react-router-dom';\n\nimport { useSelector } from 'react-redux';\nimport { getFilterValue } from 'redux/filterSlice';\nimport { useGetContactsQuery } from 'redux/contactsApi';\n\nconst Contacts = () => {\n  const input = useInput('');\n  const filterValue = useSelector(getFilterValue);\n\n  // ПОЧЕКАТИ ПОКИ ОНОВИТЬСЯ ЮЗЕР!!!!!!!!!!!!!!\n  // ПЕРЕРОБИТИ!!!!!!!!! ДОДАТИ УМОВУ!!!!!!!!!!\n  const { data: contacts = [], error, isFetching } = useGetContactsQuery();\n\n  const getVisibleContacts = normalizedFilter => {\n    return contacts.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const normalizedFilter = filterValue.toLocaleLowerCase();\n  const visibleContats = getVisibleContacts(normalizedFilter);\n  return (\n    <>\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm contacts={contacts} />\n        <ContactsTitle>Contacts</ContactsTitle>\n        <Filter {...input} />\n        {isFetching ? (\n          <ThreeDots\n            height=\"80\"\n            width=\"80\"\n            radius=\"9\"\n            color=\"#0000ff\"\n            ariaLabel=\"three-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClassName=\"\"\n            visible={true}\n          />\n        ) : (\n          <ContactList contacts={visibleContats} />\n        )}\n        {error && <h3>Something went wrong</h3>}\n      </Container>\n      <Outlet />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Label","styled","Button","Input","Field","ConttForm","Form","initialValues","name","number","SignupSchema","yup","shape","trim","matches","required","contacts","useAddContactMutation","addContact","isLoading","handleSubmit","values","resetForm","checkContactName","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","unwrap","find","contact","onSubmit","validationSchema","autoComplete","type","component","disabled","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","Name","ContItem","ListItem","stringToColor","string","i","hash","length","charCodeAt","toString","slice","stringAvatar","split","sx","bgcolor","children","id","navigate","useNavigate","useDeleteContactMutation","deleteContact","handleButtonClick","disablePadding","Avatar","onClick","ConttList","List","map","FilterLabel","FilterInput","value","onInputChange","onChange","ContactsTitle","Container","dispatch","useDispatch","e","filterChange","target","input","useInput","filterValue","useSelector","getFilterValue","useGetContactsQuery","data","error","isFetching","visibleContats","normalizedFilter","filter","toLocaleLowerCase","includes","getVisibleContacts","radius","wrapperClassName"],"sourceRoot":""}